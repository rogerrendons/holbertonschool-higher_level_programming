The ``matrix_divided`` module
===================================

Using ``matrix_divided``
-------------------------------------------------------

import function_name from module_name
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
 
>>> matrix = [
...     [4, 4],
...     [7, 7, 7],
...     [9, 9, 9]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> print(matrix)
[[4, 4], [7, 7, 7], [9, 9, 9]]

>>> matrix = [
...     [4, 4, 4],
...     [7, 7, 7],
...     [9, 9, 9]
... ]
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> print(matrix)
[[4, 4, 4], [7, 7, 7], [9, 9, 9]]

>>> matrix = [
...      [1]
... ]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided())
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [
...     [2, 2, 2],
...     [4, 4, 4],
...     [8, 8, 8]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> print(matrix)
[[2, 2, 2], [4, 4, 4], [8, 8, 8]]

>>> matrix = [
...     [1, 2, 6],
...     [4, 5, 6],
...     [3, 6, 8]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 2.0], [1.33, 1.67, 2.0], [1.0, 2.0, 2.67]]
>>> print(matrix)
[[1, 2, 6], [4, 5, 6], [3, 6, 8]]

>>> matrix = [
...     [1, 2, 3, 4],
...     [2, 5, 6, 9]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0, 1.33], [0.67, 1.67, 2.0, 3.0]]
>>> print(matrix)
[[1, 2, 3, 4], [2, 5, 6, 9]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [
...  [1, 2, 3],
...  [2, 3, 4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...  [1, 2, 3,],
...  [3, "X", 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, "hello")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, [1, 3, 4])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, ('tup', 2))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(0, matrix)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, matrix)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, matrix)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [
...  {1, 2, 3}
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...  (1, 2, 3)
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

TypeError: div must be a number
>>> matrix_divided([[1, 2, 3]], {1, 2, 3})
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3]], {1: "lol"})
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [
... [1, 2.0, 3],
... [4.0, 5, 6.0]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [
...     [1.2, 2.4, 3.6],
...     [4.8, 5.0, 6.2],
...     [7.4, 8.6, 9.8]
... ]
>>> matrix_divided(matrix, 2)
[[0.6, 1.2, 1.8], [2.4, 2.5, 3.1], [3.7, 4.3, 4.9]]
